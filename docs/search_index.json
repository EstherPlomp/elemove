[["index.html", "Source code for Mapping Elephant Movements in Kruger Section 1 Introduction", " Source code for Mapping Elephant Movements in Kruger Pratik R. Gupte 2020-12-30 Section 1 Introduction "],["data-sources.html", "Section 2 Data Sources 2.1 Load libraries 2.2 Data pre-processing 2.3 Loacations in each 5km 2.4 Make sf 2.5 Get ZA 2.6 Load libraries 2.7 Load data 2.8 Make Africa Inset 2.9 Make Kruger Inset 2.10 Make Main Figure", " Section 2 Data Sources 2.1 Load libraries # load libs library(data.table) library(ggplot2) library(sf) library(rnaturalearth) 2.2 Data pre-processing # load data data &lt;- fread(&quot;data/elephant_data.csv&quot;) # drop NAs data &lt;- na.omit(data, cols = c(&quot;xutm&quot;, &quot;yutm&quot;)) 2.3 Loacations in each 5km # round data data_count &lt;- copy(data) data_count[, c(&quot;xutm&quot;, &quot;yutm&quot;) := lapply(list(xutm, yutm), round, digits = -3 )] data_count &lt;- data_count[, .N, by = list(xutm, yutm)] # save fwrite(data_count, file = &quot;data/data_ele_count.csv&quot;) # make sf and lines data &lt;- split(data, by = &quot;id&quot;) # get histogram of speeds data &lt;- rbindlist(data) # split data again data &lt;- split(data, by = c(&quot;id&quot;)) # make multilinestring geometry &lt;- st_sfc( lapply(data, function(x) { st_linestring( as.matrix(x[, c(&quot;long&quot;, &quot;lat&quot;)]) ) }), crs = 4326 ) # retransform geometry &lt;- st_transform(geometry, 32736) 2.4 Make sf # get data data_sf &lt;- mapply( function(df) { df[1, c(&quot;id&quot;)] }, data, SIMPLIFY = FALSE ) # add geometry data_sf &lt;- rbindlist(data_sf) data_sf[, geometry := geometry] # make sf data_sf &lt;- st_sf(data_sf, crs = 32736) # save st_write(data_sf, dsn = &quot;data/data_lines_elephants.gpkg&quot;, append = FALSE ) 2.5 Get ZA # get natural earth data land &lt;- ne_countries( continent = &quot;africa&quot;, scale = &quot;small&quot;, returnclass = &quot;sf&quot; ) # save st_write(land, &quot;data/za_boundary.gpkg&quot;, append = F) 2.6 Load libraries # load libraries # for data library(sf) library(rnaturalearth) library(data.table) # for plotting library(ggplot2) library(ggspatial) library(scico) 2.7 Load data # prepare bounding box bbox &lt;- c( xmin = 342000, xmax = 393000, ymin = 7260000, ymax = 7298050 ) bbox_sf &lt;- st_bbox(bbox) bbox_sf &lt;- st_as_sfc(bbox_sf) st_crs(bbox_sf) &lt;- 32736 # get data data &lt;- st_read(&quot;data/data_lines_elephants.gpkg&quot;) # get data 253 data_253 &lt;- data[data$id == &quot;AM253&quot;, ] # get other data data_rest &lt;- data[data$id %in% c(&quot;AM255&quot;, &quot;AM99&quot;, &quot;AM239&quot;), ] # get kruger data kruger &lt;- st_read(&quot;data/kruger_clip/kruger_clip.shp&quot;) kruger &lt;- st_transform(kruger, 32736) # get kruger point kruger_point &lt;- st_point(c(31.5, -24)) kruger_point &lt;- st_sfc(kruger_point, crs = 4326) kruger_point &lt;- st_transform(kruger_point, 32736) # get za za &lt;- st_read(&quot;data/za_boundary.gpkg&quot;) za &lt;- st_transform(za, 32736) # get rivers rivers &lt;- st_read(&quot;data/river_crop/&quot;) # river buffer rivers &lt;- st_transform(rivers[is.na(rivers$seasonal), ], 32736) # river_buffer = st_crop(river_buffer, bbox) # river_buffer = st_buffer(river_buffer, 200) # river_buffer = st_union(river_buffer) # waterholes waterholes &lt;- st_read(&quot;data/waterholes/&quot;) # get slope library(raster) if (!file.exists(&quot;data/kruger_temperature_200m.tfi&quot;)) { res_init &lt;- res(raster(&quot;data/kruger_temperature_UTM.tif&quot;)) res_final &lt;- res_init * 200 / res_init gdalUtils::gdalwarp( srcfile = &quot;data/kruger_temperature_UTM.tif&quot;, dstfile = &quot;data/kruger_temp_200m.tif&quot;, tr = c(res_final), r = &quot;average&quot;, te = c(bbox(raster(&quot;data/kruger_temperature_UTM.tif&quot;))) ) } # read in cropped raster # elev = raster(&quot;data/kruger_elevation_200m.tif&quot;) temp &lt;- raster(&quot;data/kruger_temp_200m.tif&quot;) temp &lt;- raster::crop(temp, as(bbox_sf, &quot;Spatial&quot;)) temp &lt;- cbind(coordinates(temp), values(temp)) temp &lt;- data.table(temp) temp &lt;- temp[V3 &gt; 22, ] 2.8 Make Africa Inset fig_inset_a &lt;- ggplot() + geom_sf( data = za, fill = &quot;tan&quot;, show.legend = F, col = NA ) + geom_sf( data = kruger_point, size = 5 ) + scale_y_continuous( breaks = seq(-22, -34, -6) ) + theme_void(base_size = 8) + theme( panel.background = element_rect( fill = &quot;aliceblue&quot;, colour = &quot;grey20&quot; ), plot.margin = unit(rep(2, 4), &quot;mm&quot;) ) + coord_sf( expand = T ) 2.9 Make Kruger Inset pal &lt;- scico(7, palette = &quot;turku&quot;) fig_inset_b &lt;- ggplot() + geom_sf( data = kruger, fill = &quot;aliceblue&quot;, alpha = 0.8, col = NA, lwd = 0.2 ) + geom_sf( data = data, lwd = c(0.1), lty = 1, alpha = c(0.4), col = pal[3] ) + annotate( geom = &quot;rect&quot;, fill = NA, col = &quot;grey20&quot;, lwd = 0.3, xmin = bbox[&quot;xmin&quot;], xmax = bbox[&quot;xmax&quot;], ymin = bbox[&quot;ymin&quot;], ymax = bbox[&quot;ymax&quot;] ) + annotation_scale( bar_cols = c(&quot;grey50&quot;, &quot;grey70&quot;), height = unit(1, units = &quot;mm&quot;), text_family = &quot;IBM Plex Sans&quot; ) + theme_void() + coord_sf( crs = 32736, expand = FALSE, xlim = c(325000, NA) ) + theme( panel.background = element_rect( fill = &quot;tan&quot; ), panel.border = element_rect( colour = &quot;grey20&quot;, fill = NA ), plot.margin = unit(rep(1, 4), &quot;mm&quot;) ) 2.10 Make Main Figure 2.10.1 Prepare textbox textbox &lt;- glue::glue( &quot;**Kruger Elephants Shuttle to Water** African elephants move as they please, ignoring park boundaries \\\\ when it suits them. Yet they need water to help them through the thermal landscape. \\\\ Kruger elephants frequent water sources during the afternoon, the \\\\ hottest part of the day; arriving and leaving at high speed. \\\\ Here, elephant _AM253_ (red) and her herd keep to their own side of water sources, \\\\ while other herds keep to theirs.&quot; ) # texttitle = &quot;Elephants Shuttle to Water&quot; textdata &lt;- data.table( x = bbox[&quot;xmin&quot;] + 6000, y = bbox[&quot;ymax&quot;] - 9000, label = textbox ) 2.10.2 Prepare movement plot # make plot fig_main &lt;- ggplot() + geom_sf( data = kruger, col = NA, fill = &quot;antiquewhite&quot;, ) + geom_tile( data = temp, aes(x, y, fill = V3), show.legend = F, alpha = 0.45 ) + geom_sf( data = rivers[is.na(rivers$seasonal), ], lwd = 1, col = scico::scico(3, palette = &quot;nuuk&quot; )[1], alpha = 0.35 ) + geom_sf( data = data_rest, lwd = c(0.1, 0.1, 0.1), lty = 1, alpha = c(0.2, 0.8, 0.15), col = scico::scico(7, palette = &quot;turku&quot; )[c(2, 3, 2)] ) + geom_sf( data = data_253, lwd = 0.15, alpha = 1, col = scico::scico(7, palette = &quot;bilbao&quot; )[6] ) + geom_sf( data = waterholes, col = scico::scico(5, palette = &quot;nuuk&quot; )[1], alpha = 0.45 ) + geom_sf( data = kruger, col = &quot;grey50&quot;, lwd = 0.2, fill = NA, lty = 2 ) + scale_fill_gradientn( colours = scico(10, palette = &quot;vik&quot;, direction = 1, begin = 0., end = 1 ) ) 2.10.3 Add text box fig_main &lt;- fig_main + geom_textbox( data = textdata, aes( x, y, label = label ), family = &quot;IBM Plex Sans&quot;, size = 4, colour = &quot;grey30&quot;, fill = alpha(&quot;antiquewhite&quot;, 0.3), box.color = NA ) 2.10.4 Add decoration fig_main &lt;- fig_main + annotation_north_arrow( style = north_arrow_minimal( text_family = &quot;IBM Plex Sans&quot;, text_size = 10, text_col = &quot;grey50&quot;, line_col = &quot;grey50&quot;, fill = &quot;grey50&quot; ), location = &quot;br&quot; ) + annotation_scale( bar_cols = c(&quot;grey50&quot;, &quot;grey90&quot;), height = unit(1, units = &quot;mm&quot;), text_family = &quot;IBM Plex Sans&quot; ) + theme_void() + theme( panel.background = element_rect( colour = &quot;grey&quot;, fill = &quot;grey90&quot; ), plot.margin = unit(rep(5, 4), &quot;mm&quot;) ) + coord_sf( xlim = bbox[c(&quot;xmin&quot;, &quot;xmax&quot;)], ylim = bbox[c(&quot;ymin&quot;, &quot;ymax&quot;)], expand = FALSE ) 2.10.5 Add insets fig_main &lt;- fig_main + annotation_custom( grob = ggplotGrob( fig_inset_b ), xmin = bbox[c(&quot;xmin&quot;)] + 1000, xmax = bbox[c(&quot;xmin&quot;)] + 7500, ymax = bbox[&quot;ymin&quot;] + 13500, ymin = bbox[&quot;ymin&quot;] + 1000 ) + annotation_custom( grob = ggplotGrob( fig_inset_a ), xmin = bbox[c(&quot;xmin&quot;)] + 1000, xmax = bbox[c(&quot;xmin&quot;)] + 7500, ymax = bbox[&quot;ymin&quot;] + 21000, ymin = bbox[&quot;ymin&quot;] + 13600 ) 2.10.6 Save figure ggsave(fig_main, filename = &quot;figures/fig_map4.png&quot;, height = 9, width = 12 ) "]]
